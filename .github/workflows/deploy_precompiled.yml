name: Build (using pre-compiled kernels) and publish to GitHub Packages

on:
  push:
    tags:              # only publish on version tags such as v0.4.2
      - 'v*'
  workflow_dispatch:   # manual trigger

permissions:           # needed for twine â†’ GitHub Packages
  contents: read
  packages: write

jobs:
  build-and-publish:
    runs-on: "cpu-runner-16c-64gb-01"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build tooling
      run: |
        python -m pip install --upgrade pip build twine

    - name: Generate build label
      id: buildlabel
      run: |
        TS=$(date -u +%Y%m%d%H%M%S)
        echo "VLLM_DATETIMESTAMP=${TS}" >> "$GITHUB_ENV"

    # Build wheels / sdist without compiling CUDA kernels
    - name: Build distribution with pre-compiled kernels
      env:
        VLLM_USE_PRECOMPILED: 1
        VLLM_TARGET_DEVICE: "cuda"
        VLLM_DATETIMESTAMP: ${{ env.VLLM_DATETIMESTAMP }}
      run: |
        python -m build --wheel --sdist --outdir dist .

    - name: Publish package to GitLab Registry
      env:
        TWINE_USERNAME: ${{ secrets.GITLAB_DEPLOY_TOKEN_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.GITLAB_DEPLOY_TOKEN }}
        REPO_URL: ${{ secrets.GITLAB_API_URL }}/projects/${{ secrets.GITLAB_PROJECT_ID }}/packages/pypi
      run: |
        python -m pip install --upgrade twine
        python -m twine upload --verbose --repository-url "$REPO_URL" dist/*
